// This file should be updated to include the getKiteSpotForecast function
// to maintain backward compatibility

import { redirect } from "next/navigation"
import type { KiteSpotForecast } from "@/app/services/api-service" // Updated import path to match your file structure

// This is just a placeholder to prevent import errors
// All actual functionality should use the client-side API service
export async function getKiteSpotByName(name: string) {
  console.warn("getKiteSpotByName from kitespots-server.ts is deprecated. Use the client-side API service instead.")
  redirect(`/spots/${encodeURIComponent(name)}`)
}

export async function getAllKiteSpots() {
  console.warn("getAllKiteSpots from kitespots-server.ts is deprecated. Use the client-side API service instead.")
  redirect("/spots")
}

export async function getKiteSpotForecast(spotId: string): Promise<KiteSpotForecast[] | null> {
  console.warn("getKiteSpotForecast from kitespots-server.ts is deprecated. Use the client-side API service instead.")

  // We can't redirect here since this is used in an API route
  // Instead, we'll forward the request to the client-side API service
  try {
    const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || "http://localhost:8000"
    const response = await fetch(`${API_BASE_URL}/api/kitespots/${encodeURIComponent(spotId)}/forecast`)

    if (!response.ok) {
      if (response.status === 404) {
        return null
      }
      throw new Error(`Failed to fetch forecast for spot: ${spotId}`)
    }

    return response.json()
  } catch (error) {
    console.error(`Error fetching forecast for spot ${spotId}:`, error)
    return null
  }
}

